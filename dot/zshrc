#!/usr/bin/env zsh

# Run cross shell configuration
. ~/.shrc

export ZSH="$HOME/.oh-my-zsh" # Path to oh-my-zsh installation
export ZSH_CONFIG="$HOME/.zshrc"
export ZSH_CUSTOM="$ZSH/custom"
export ZSH_COMPDUMP="$ZSH_CACHE_DIR/.zcompdump-$SHORT_HOST-$ZSH_VERSION"
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=8"

mkdir -p "$XDG_STATE_HOME/zsh" # zsh doesn't create it

HISTFILE="$XDG_STATE_HOME/zsh/history"
SAVEHIST=1000000
HISTSIZE=2000000
setopt EXTENDED_HISTORY # Record timestamp in history
setopt HIST_EXPIRE_DUPS_FIRST # Expire duplicate entries first when trimming history
setopt HIST_IGNORE_DUPS # Dont record an entry that was just recorded again
setopt HIST_IGNORE_ALL_DUPS # Delete old recorded entry if new entry is a duplicate
setopt HIST_FIND_NO_DUPS # Do not display a line previously found
setopt HIST_IGNORE_SPACE # Dont record an entry starting with a space
setopt HIST_SAVE_NO_DUPS # Dont write duplicate entries in the history file
setopt SHARE_HISTORY # Share history between all sessions
setopt HIST_VERIFY # Do not execute commands using history (e.g.: using !$) immediately

ZSH_THEME="mlh"
MLH_AT_SYMBOL=" at "
MLH_IN_SYMBOL=" in "
MLH_ON_SYMBOL=" on "
MLH_SHELL_SYMBOL="$ "

CASE_SENSITIVE="true" # ohmyzsh: use case-sensitive completion

plugins=(
	1password
	brew
	# docker - works automatically when brew-installed
	# dotnet
	# flutter
	`#fzf` $([ -x "$(command -v fzf)" ] && echo 'fzf-tab')
	`#fzf` $([ -x "$(command -v fzf)" ] && echo 'fzf')
	gradle
	# gradle-completion
	macos
	pod
	swiftpm
	terraform
	zsh-autosuggestions
	zsh-syntax-highlighting
)

# See https://github.com/ohmyzsh/ohmyzsh/pull/12281#issuecomment-1999588857
zstyle ':omz:plugins:gradle' aliases no

if command -v brew >/dev/null 2>&1; then
	# Set up completions for `brew` command and `brew`-installed programs
	# See: https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh
	FPATH="$(brew --prefix)/share/zsh/site-functions:$FPATH"

	# Set up zsh-completions
	FPATH="$(brew --prefix)/share/zsh-completions:$FPATH"
fi

if [ -d "$ZSH" ]; then
	source "$ZSH/oh-my-zsh.sh"
	# oh-my-zsh initializes completion, so shrc needs to be sourced before it.
	# oh-my-zsh sets aliases, so aliases needs to be sourced after it.
	FPATH="$ZSH_CACHE_DIR/completions:$FPATH"
fi

# make CMD+Delete delete line before the cursor (not the whole line)
bindkey \^U backward-kill-line

# Auto-insert first completion https://unix.stackexchange.com/q/12288/417321
setopt menu_complete
# Disable the annoying beep
unsetopt beep

# Auto-expand aliases on space https://www.reddit.com/r/zsh/comments/bbbluo/comment/ekhpxer
# Disableed on 4th Jan 2025 because it started to annoy me.
# my-new-keymap() {
# 	zle _expand_alias
# 	zle self-insert
# }
# zle -N my-new-keymap
# bindkey -M main ' ' my-new-keymap

# Set up Google Cloud SDK
if command -v gcloud >/dev/null 2>&1; then
	. "$(brew --prefix)/share/google-cloud-sdk/path.zsh.inc"
	. "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc"
fi

# Load cross-shell aliases
source "$HOME/.dotfiles/script/aliases"

# iTerm2 shell integration
if [ -e "$HOME/.iterm2_shell_integration.zsh" ]; then
	. "$HOME/.iterm2_shell_integration.zsh" || true
fi

# Set up Atuin (https://atuin.sh)
if command -v atuin >/dev/null 2>&1; then
	eval "$(atuin init zsh --disable-up-arrow)"
fi
