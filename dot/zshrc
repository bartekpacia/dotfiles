# Path to your oh-my-zsh installation.
ZSH=~/.oh-my-zsh
ZSH_CONFIG=~/.zshrc
ZSH_CUSTOM=$ZSH/custom

# GPG config (see https://help.github.com/en/github/authenticating-to-github/telling-git-about-your-signing-key)
export GPG_TTY=$(tty)

ZSH_THEME="robbyrussell"
# ZSH_THEME="mlh"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=3

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"
plugins=(
  git
  osx
  adb
  zsh-autosuggestions
  zsh-syntax-highlighting
  zsh-completions
  zsh-apple-touchbar
  flutter
  emoji
)


if [ -d $ZSH ]; then
  source $ZSH/oh-my-zsh.sh
fi

# Flutter setup
export PATH="$HOME/flutter/bin:$PATH"

# Android Debug Bridge setup
export PATH="$HOME/Library/Android/sdk/platform-tools:$PATH"
export ANDROID_HOME="$HOME/Library/Android/sdk"

# # # # # # # # # # # # # # 
# P y t h o n
# # # # # # # # # # # # # #

# Check if pyenv is installed
if ! command -v pyenv &> /dev/null
then
  echo "pyenv could not be found"
else
  eval "$(pyenv init -)"
fi

export PATH="$HOME/.poetry/bin:$PATH"
export PYTHONDONTWRITEBYTECODE=1

# # # # # # # # # # # # # # 
# G o l a n g
# # # # # # # # # # # # # #

export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export PATH="$GOBIN":$PATH

# # # # # # # # # # # # # # 
# R u b y 
# # # # # # # # # # # # # #

# Check if rbenv is installed
if ! command -v rbenv &> /dev/null
then
  echo "rbenv could not be found"
else
  eval "$(rbenv init -)"
  export PATH="$HOME/.rbenv/bin:$PATH"
fi

# # # # # # # # # # # # # # 
# R u s t 
# # # # # # # # # # # # # #
export PATH="$HOME/.cargo/bin:$PATH"

# nvm configuration
export NVM_DIR="$HOME/.nvm"
if [ -s "$NVM_DIR/nvm.sh" ]; then
  source "$NVM_DIR/nvm.sh"  # This loads nvm
fi
if [ -s "$NVM_DIR/bash_completion" ]; then
  source "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# heroku autocomplete setup
# HEROKU_AC_ZSH_SETUP_PATH=/Users/bartekpacia/Library/Caches/heroku/autocomplete/zsh_setup && test -f $HEROKU_AC_ZSH_SETUP_PATH && source # $HEROKU_AC_ZSH_SETUP_PATH;

autoload -U compinit && compinit