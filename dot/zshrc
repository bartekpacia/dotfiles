# Path to your oh-my-zsh installation.
ZSH=~/.oh-my-zsh
ZSH_CONFIG=~/.zshrc
ZSH_CUSTOM=$ZSH/custom

DOTFILES=~/dotfiles

# GPG config (see https://help.github.com/en/github/authenticating-to-github/telling-git-about-your-signing-key)
export GPG_TTY=$(tty)

# ZSH_THEME="robbyrussell"
ZSH_THEME="mlh"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=7

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"
plugins=(
  git
  osx
  adb
  zsh-autosuggestions
  zsh-syntax-highlighting
  zsh-completions
  zsh-apple-touchbar
)


if [ -d $ZSH ]; then
  source $ZSH/oh-my-zsh.sh
fi

# Flutter setup
export PATH="$HOME/flutter/bin:$PATH"

# Android setup
# export PATH="$HOME/Library/Android/sdk/platform-tools:$PATH"
# export ANDROID_HOME="$HOME/Library/Android/sdk"

# Android
export ANDROID_SDK_ROOT="$HOME/androidsdk"
export PATH="$ANDROID_SDK_ROOT:$PATH"
export PATH="$ANDROID_SDK_ROOT/cmdline-tools/tools/bin:$PATH"
export PATH="$ANDROID_SDK_ROOT/cmdline-tools/tools/lib:$PATH"
export PATH="$ANDROID_SDK_ROOT/platform-tools:$PATH"
export PATH="$ANDROID_SDK_ROOT/emulator:$PATH"

# Java
# on Linux
# export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
# on Mac
export JAVA_HOME="/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/home"
export PATH="$JAVA_HOME/bin:$PATH"

# # # # # # # # # # # # # #
# P y t h o n
# # # # # # # # # # # # # #

# Check if pyenv is installed
if [ -d "$HOME/.pyenv" ]; then
  export PATH="$HOME/.pyenv/bin:$PATH"
  eval "$(pyenv init -)"
fi

export PATH="$HOME/.poetry/bin:$PATH"
export PYTHONDONTWRITEBYTECODE=1

# # # # # # # # # # # # # #
# R u b y
# # # # # # # # # # # # # #

# Check if rbenv is installed
if [ -d "$HOME/.rbenv" ]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
fi

# # # # # # # # # # # # # #
# G o l a n g
# # # # # # # # # # # # # #

export PATH="/usr/local/go/bin:$PATH"

# 3 exports below are deprecated and should be removed
export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export PATH="$GOBIN":$PATH

# # # # # # # # # # # # # #
# R u s t
# # # # # # # # # # # # # #

export PATH="$HOME/.cargo/bin:$PATH"

# # # # # # # # # # # # # #
# N o d e
# # # # # # # # # # # # # #

export NVM_DIR="$HOME/.nvm"

# normal install
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Homebrew install
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='micro'
else
  export EDITOR='micro'
fi

# Heroku autocomplete setup
HEROKU_AC_ZSH_SETUP_PATH=~/Library/Caches/heroku/autocomplete/zsh_setup
if [ -f $HEROKU_AC_ZSH_SETUP_PATH ]; then
  source $HEROKU_AC_ZSH_SETUP_PATH;
fi


# Source local, gitignored files
if [ -d $DOTFILES/local ]; then
  for file in $DOTFILES/local/*.zsh; do
    source "$file"
  done
fi
