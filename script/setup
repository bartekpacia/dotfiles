#!/bin/bash
set -e

# This script is designed to be run as part of the strap bootstrapping process.
# Assume that git and brew are installed. Assume that dotfiles repo is in ~.

reinstall() {
    printf "setup: reinstalling zsh-autosuggestions...\n"
    rm -rf ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
    git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions 1> /dev/null 2>&1
    
    printf "setup: reinstalling zsh-syntax-highlighting...\n"
    rm -rf ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting 1> /dev/null 2>&1
    
    printf "setup: reinstalling zsh-completions...\n"
    rm -rf ~/.oh-my-zsh/custom/plugins/zsh-completions
    git clone https://github.com/zsh-users/zsh-completions ~/.oh-my-zsh/custom/plugins/zsh-completions 1> /dev/null 2>&1
}

# Symlink dot/* into home directory as hidden files
printf "setup: symlinking hidden files...\n"
for f in "$DOTFILES/dot/"*; do
    ln -sfn "$f" "$HOME/.$(basename "$f")"
done

# Symlink files/* into home directory as regular files
printf "setup: symlinking normal files...\n"
for f in "$DOTFILES/files/"*; do
    ln -sfn "$f" "$HOME/$(basename "$f")"
done

# Symlink ssh/* (my common SSH config) into ~/.ssh as regular files
printf "setup: symlinking ssh files...\n"
for f in "$DOTFILES/ssh/"*; do
    if [ ! -d ~/.ssh ]; then
        mkdir ~/.ssh
    fi
    
    ln -sfn "$f" ~/.ssh/"$(basename "$f")"
done

# Setup oh-my-zsh
export KEEP_ZSHRC="yes"
export RUNZSH="no"
if [ ! -d "$ZSH" ]; then
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
else
    printf "setup: aborted installation of oh-my-zsh because directory ~/.oh-my-zsh/ already exists\n"
fi

printf "setup: symlinking custom oh-my-zsh plugins...\n"
for f in "$DOTFILES/custom/plugins/"*; do
    ln -sfn "$f" "$ZSH_CUSTOM/plugins/$(basename "$f")"
done

printf "setup: symlinking custom oh-my-zsh scripts...\n"
for f in "$DOTFILES/custom/"*.zsh; do
    ln -sfn "$f" "$ZSH_CUSTOM/$(basename "$f")"
done

if [ "$1" = "--no-reinstall" ]; then
    printf "setup: --no-reinstall passed, aborted reinstalling custom plugins\n"
else
    reinstall
fi

# The below asks for a password, so it's annoying
#
# echo "Changing default shell to zsh in $(which zsh)"
# chsh -s $(which zsh)
# echo "Successfully changed default shell to zsh"

printf "setup: such successfullness\n"
